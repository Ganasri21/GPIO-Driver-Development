/*
 * stm32f407xx_gpio_driver.c
 *
 *  Created on: Nov 15, 2024
 *      Author: ganasri.s
 */


#include "stm32f407xx_gpio_driver.h"

/*
 * Peripheral Clock Setup
 */

/******************************************************************
 * @fn              - GPIO_Init
 * @brief           -
 *
 * @param[in]       -
 * @param[in]       -
 * @param[in]       -
 *
 * @return          -
 *
 * @Note            -

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)     // To enable or disable peripheral clock for a given Base address
{

}



/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle);        // To initialize GPIO port - take pointer to the Handle structure
void GPIO_DeInit(GPIO_RegDef_t *pGPIOx);          // To de-initilize GPIO port - sends back to reset state

/*
 * Data read and write
 */
uint8_t GPIO_ReadfromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);                // To read from a particular Input pin
uint16_t GPIO_ReadfromInputPort(GPIO_RegDef_t *pGPIOx);                                 // To read from entire Input Port - used uint16_t to read from 16 pins
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value);    // To write to a particular Output pin - Parameter 'Value' takes pin set or reset
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value);                     // To write to entire Output port
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);                    // To toggle output pin

/*
 * ISR Configuration and Interrupt Handling
 */
void GPIO_IRQConfig(uint8_t IRQHandle, uint8_t IRQPriority, uint8_t EnorDi);            // To configure Interrupt request number
void GPIO_IRQHandling(uint8_t PinNumber);                                              // To Handle the Interrupt

